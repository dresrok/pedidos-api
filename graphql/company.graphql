type Company {
    company_id: ID!
    company_legal_name: String!
    company_commercial_name: String
    company_identification: String
    company_slug: String
    company_image: String
    city: String!
    company_is_certified: Boolean
    offices: [Office!]! @hasMany
    social_networks: [SocialNetwork!]!
        @belongsToMany(relation: "socialNetworks")
}

extend type Query {
    companyByUserId(user_id: ID!): Company!
        @middleware(checks: ["auth:api"])
        @field(resolver: "App\\GraphQL\\Queries\\Company@getByUserId")
}

extend type Mutation {
    createCompany(company_legal_name: String, city: String): Company @create
    updateCompany(
        id: ID! @rules(apply: ["required"])
        company_legal_name: String
        company_identification: String
        company_commercial_name: String
        company_image: String
        city: String
    ): Company @update
    deleteCompany(company_id: ID!): Company @delete
}
