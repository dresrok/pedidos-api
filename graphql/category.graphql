type Category {
    category_id: ID!
    category_machine_name: String
    category_normalized_name: String
    category_name: String!
    category_image_path: String
    category_thumbnail_path: String
    category_order: Int!
    parent: Category @belongsTo
    office: Office! @belongsTo
    subcategories: [Category] @hasMany
    products: [Product] @hasMany
}

extend type Query {
    categories: [Category] @paginate(type: "paginator")
    categoryById(category_id: ID! @eq): Category @find
    categoryByName(category_name: String! @where(operator: "like")): Category
        @find
}

extend type Mutation {
    createCategory(
        category_name: String!
        category_image: Upload
        office_id: ID!
    ): Category
        @field(resolver: "App\\GraphQL\\Mutations\\CategoryResolver@create")
    updateCategory(
        id: ID! @rules(apply: ["required"])
        category_name: String!
        category_image_path: String!
    ): Category @update
    deleteCategory(category_id: ID!): Category @delete
}
